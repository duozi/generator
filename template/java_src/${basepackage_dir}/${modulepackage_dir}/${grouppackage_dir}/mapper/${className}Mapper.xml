<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro mapperEl1 value>${r"${"}${value}}</#macro>
<#macro mapperEl2 value>${r"#{item."}${value}}</#macro>
<#macro namespace>${namespace_prefix}.</#macro>
<mapper namespace="${basepackage}${modulepackage}${table.ownerSynonymName}.dao.${className}Mapper">

    <resultMap id="${className}Map" type="${basepackage}${modulepackage}${table.ownerSynonymName}.entity.${className}">
        <#list table.columns as column>
        <result property="${column.columnNameLower}" column="${column.sqlName}"/>
        </#list>
    </resultMap>
    
    <sql id="columns">
        <![CDATA[
        <#list table.columns as column>${column.sqlName}<#if column_has_next>, </#if></#list>
        ]]>
    </sql>
    
    <sql id="where">
        <where>
           <#list table.columns as column>
           <#if column.isDateTimeColumn>
           <if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}Begin)">
                AND ${column.sqlName} >= <@mapperEl column.columnNameFirstLower+"Begin"/>
           </if>
           <if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}End)">
                AND ${column.sqlName} &lt;= <@mapperEl column.columnNameFirstLower+"End"/>
           </if>
           <#else>
           <if test="@Ognl@isNotEmpty(${column.columnNameFirstLower})">
                AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower/>
            </if>
           </#if>
           </#list>            
        </where>
    </sql>
    
    <select id="get" resultMap="${className}Map">
        SELECT <include refid="columns" />
        <![CDATA[
            FROM
                ${table.sqlName}
            WHERE 
                <#list table.compositeIdColumns as column>
                ${column.sqlName} = <@mapperEl '${column.columnNameLower}'/> <#if column_has_next> AND </#if>
                </#list>
        ]]>
    </select>
    
    <select id="list" resultMap="${className}Map">
        SELECT
            <include refid="columns" />
        FROM
            ${table.sqlName} 
        <include refid="where"/>
    </select>
        
    <select id="count" resultType="long">
        <![CDATA[
            SELECT
                count(1)
            FROM
                ${table.sqlName}
        ]]>
        <include refid="where"/>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="${table.idColumn.columnNameFirstLower}">
        <![CDATA[
            INSERT INTO ${table.sqlName} (
            <#list table.columns as column>
                ${column.sqlName}<#if column_has_next>,</#if>
            </#list>
            ) VALUES (
            <#list table.columns as column>
                <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if>
            </#list> 
            )
        ]]>
    </insert>

    <insert id="saveBatch">
        <![CDATA[
            INSERT INTO ${table.sqlName} (
            <#list table.columns as column>
                ${column.sqlName}<#if column_has_next>,</#if>
            </#list>
            ) VALUES
        ]]>
        <foreach collection="list" item="item" index="index" separator=",">
            (<#list table.columns as column><@mapperEl2 column.columnNameFirstLower/><#if column_has_next>,</#if></#list>)
        </foreach>
    </insert>
    
    <update id="update">
        	UPDATE
                ${table.sqlName}
            <set>
                <#list table.notPkColumns as column>
                <if test="${column.columnNameFirstLower} != null">
                	<![CDATA[ ${column.sqlName} = <@mapperEl column.columnNameFirstLower/> ]]><#if column_has_next>,</#if>
                </if>
                </#list>
            </set>
            WHERE
                <#list table.compositeIdColumns as column>
                ${column.sqlName} = <@mapperEl '${column.columnNameLower}'/> <#if column_has_next> AND </#if>
                </#list>
    </update>
    
    <delete id="deleteByPK">
        <![CDATA[
            DELETE
            FROM
                ${table.sqlName}
            WHERE
                <#list table.compositeIdColumns as column>
                ${column.sqlName} = <@mapperEl '${column.columnNameLower}'/> <#if column_has_next> AND </#if>
                </#list>
        ]]>
    </delete>
    
    <delete id="delete">
        <![CDATA[
            DELETE
            FROM
                ${table.sqlName}
        ]]>
        <include refid="where"/>
    </delete>
    
    <delete id="deleteBatchByPK">
        <![CDATA[
            DELETE
            FROM
                ${table.sqlName}
            WHERE
                <#list table.compositeIdColumns as column>${column.sqlName}</#list> IN
        ]]>
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")"><@mapperEl '${table.pkColumn.columnNameFirstLower}s'/></foreach>
    </delete>
</mapper>

